//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateUserResponse", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ValidateUserResponse : object
    {
        
        private string DeviceIdField;
        
        private string DeviceNameField;
        
        private bool IsValidField;
        
        private System.DateTime OperationTimeField;
        
        private string UserIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId
        {
            get
            {
                return this.DeviceIdField;
            }
            set
            {
                this.DeviceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName
        {
            get
            {
                return this.DeviceNameField;
            }
            set
            {
                this.DeviceNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid
        {
            get
            {
                return this.IsValidField;
            }
            set
            {
                this.IsValidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperationTime
        {
            get
            {
                return this.OperationTimeField;
            }
            set
            {
                this.OperationTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureTable", Namespace="http://schemas.datacontract.org/2004/07/Database")]
    public partial class TemperatureTable : object
    {
        
        private string AddressField;
        
        private System.Nullable<System.DateTime> DateField;
        
        private System.Nullable<byte> FanStatusField;
        
        private long IdField;
        
        private string TemperatureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> FanStatus
        {
            get
            {
                return this.FanStatusField;
            }
            set
            {
                this.FanStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Temperature
        {
            get
            {
                return this.TemperatureField;
            }
            set
            {
                this.TemperatureField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureCollection", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class TemperatureCollection : object
    {
        
        private WCF.TemperatureTable[] TemperatureTablesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCF.TemperatureTable[] TemperatureTables
        {
            get
            {
                return this.TemperatureTablesField;
            }
            set
            {
                this.TemperatureTablesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class CompositeType : object
    {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue
        {
            get
            {
                return this.BoolValueField;
            }
            set
            {
                this.BoolValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue
        {
            get
            {
                return this.StringValueField;
            }
            set
            {
                this.StringValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF.IService")]
    public interface IService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TestConnection", ReplyAction="http://tempuri.org/IService/TestConnectionResponse")]
        string TestConnection(bool _dummy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TestConnection", ReplyAction="http://tempuri.org/IService/TestConnectionResponse")]
        System.Threading.Tasks.Task<string> TestConnectionAsync(bool _dummy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ValidateUser", ReplyAction="http://tempuri.org/IService/ValidateUserResponse")]
        WCF.ValidateUserResponse ValidateUser(string _userId, string _password, string _deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ValidateUser", ReplyAction="http://tempuri.org/IService/ValidateUserResponse")]
        System.Threading.Tasks.Task<WCF.ValidateUserResponse> ValidateUserAsync(string _userId, string _password, string _deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastTemperatureRecord", ReplyAction="http://tempuri.org/IService/GetLastTemperatureRecordResponse")]
        WCF.TemperatureTable GetLastTemperatureRecord();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastTemperatureRecord", ReplyAction="http://tempuri.org/IService/GetLastTemperatureRecordResponse")]
        System.Threading.Tasks.Task<WCF.TemperatureTable> GetLastTemperatureRecordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMunuteTemperature", ReplyAction="http://tempuri.org/IService/GetMunuteTemperatureResponse")]
        WCF.TemperatureCollection GetMunuteTemperature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMunuteTemperature", ReplyAction="http://tempuri.org/IService/GetMunuteTemperatureResponse")]
        System.Threading.Tasks.Task<WCF.TemperatureCollection> GetMunuteTemperatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTwoMunutesTemperature", ReplyAction="http://tempuri.org/IService/GetTwoMunutesTemperatureResponse")]
        WCF.TemperatureCollection GetTwoMunutesTemperature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTwoMunutesTemperature", ReplyAction="http://tempuri.org/IService/GetTwoMunutesTemperatureResponse")]
        System.Threading.Tasks.Task<WCF.TemperatureCollection> GetTwoMunutesTemperatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetThreeMunutesTemperature", ReplyAction="http://tempuri.org/IService/GetThreeMunutesTemperatureResponse")]
        WCF.TemperatureCollection GetThreeMunutesTemperature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetThreeMunutesTemperature", ReplyAction="http://tempuri.org/IService/GetThreeMunutesTemperatureResponse")]
        System.Threading.Tasks.Task<WCF.TemperatureCollection> GetThreeMunutesTemperatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFourMunutesTemperature", ReplyAction="http://tempuri.org/IService/GetFourMunutesTemperatureResponse")]
        WCF.TemperatureCollection GetFourMunutesTemperature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFourMunutesTemperature", ReplyAction="http://tempuri.org/IService/GetFourMunutesTemperatureResponse")]
        System.Threading.Tasks.Task<WCF.TemperatureCollection> GetFourMunutesTemperatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFiveMunutesTemperature", ReplyAction="http://tempuri.org/IService/GetFiveMunutesTemperatureResponse")]
        WCF.TemperatureCollection GetFiveMunutesTemperature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFiveMunutesTemperature", ReplyAction="http://tempuri.org/IService/GetFiveMunutesTemperatureResponse")]
        System.Threading.Tasks.Task<WCF.TemperatureCollection> GetFiveMunutesTemperatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterDevice", ReplyAction="http://tempuri.org/IService/RegisterDeviceResponse")]
        bool RegisterDevice(string _deviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterDevice", ReplyAction="http://tempuri.org/IService/RegisterDeviceResponse")]
        System.Threading.Tasks.Task<bool> RegisterDeviceAsync(string _deviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        WCF.CompositeType GetDataUsingDataContract(WCF.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WCF.CompositeType> GetDataUsingDataContractAsync(WCF.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IServiceChannel : WCF.IService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WCF.IService>, WCF.IService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceClient() : 
                base(ServiceClient.GetDefaultBinding(), ServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string TestConnection(bool _dummy)
        {
            return base.Channel.TestConnection(_dummy);
        }
        
        public System.Threading.Tasks.Task<string> TestConnectionAsync(bool _dummy)
        {
            return base.Channel.TestConnectionAsync(_dummy);
        }
        
        public WCF.ValidateUserResponse ValidateUser(string _userId, string _password, string _deviceId)
        {
            return base.Channel.ValidateUser(_userId, _password, _deviceId);
        }
        
        public System.Threading.Tasks.Task<WCF.ValidateUserResponse> ValidateUserAsync(string _userId, string _password, string _deviceId)
        {
            return base.Channel.ValidateUserAsync(_userId, _password, _deviceId);
        }
        
        public WCF.TemperatureTable GetLastTemperatureRecord()
        {
            return base.Channel.GetLastTemperatureRecord();
        }
        
        public System.Threading.Tasks.Task<WCF.TemperatureTable> GetLastTemperatureRecordAsync()
        {
            return base.Channel.GetLastTemperatureRecordAsync();
        }
        
        public WCF.TemperatureCollection GetMunuteTemperature()
        {
            return base.Channel.GetMunuteTemperature();
        }
        
        public System.Threading.Tasks.Task<WCF.TemperatureCollection> GetMunuteTemperatureAsync()
        {
            return base.Channel.GetMunuteTemperatureAsync();
        }
        
        public WCF.TemperatureCollection GetTwoMunutesTemperature()
        {
            return base.Channel.GetTwoMunutesTemperature();
        }
        
        public System.Threading.Tasks.Task<WCF.TemperatureCollection> GetTwoMunutesTemperatureAsync()
        {
            return base.Channel.GetTwoMunutesTemperatureAsync();
        }
        
        public WCF.TemperatureCollection GetThreeMunutesTemperature()
        {
            return base.Channel.GetThreeMunutesTemperature();
        }
        
        public System.Threading.Tasks.Task<WCF.TemperatureCollection> GetThreeMunutesTemperatureAsync()
        {
            return base.Channel.GetThreeMunutesTemperatureAsync();
        }
        
        public WCF.TemperatureCollection GetFourMunutesTemperature()
        {
            return base.Channel.GetFourMunutesTemperature();
        }
        
        public System.Threading.Tasks.Task<WCF.TemperatureCollection> GetFourMunutesTemperatureAsync()
        {
            return base.Channel.GetFourMunutesTemperatureAsync();
        }
        
        public WCF.TemperatureCollection GetFiveMunutesTemperature()
        {
            return base.Channel.GetFiveMunutesTemperature();
        }
        
        public System.Threading.Tasks.Task<WCF.TemperatureCollection> GetFiveMunutesTemperatureAsync()
        {
            return base.Channel.GetFiveMunutesTemperatureAsync();
        }
        
        public bool RegisterDevice(string _deviceID)
        {
            return base.Channel.RegisterDevice(_deviceID);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterDeviceAsync(string _deviceID)
        {
            return base.Channel.RegisterDeviceAsync(_deviceID);
        }
        
        public string GetData(int value)
        {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value)
        {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCF.CompositeType GetDataUsingDataContract(WCF.CompositeType composite)
        {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WCF.CompositeType> GetDataUsingDataContractAsync(WCF.CompositeType composite)
        {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.0.105/WCF/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService,
        }
    }
}
